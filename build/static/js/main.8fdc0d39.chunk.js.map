{"version":3,"sources":["components/Note.js","components/Notification/Notification.js","serv/note.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","Notification","message","baseUrl","axios","get","then","res","data","newObject","post","id","put","Footer","style","color","fontStyle","fontSize","App","props","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","filter","useEffect","noteServices","response","map","toggelingImportant","find","n","changedNote","catch","error","setTimeout","onSubmit","e","preventDefault","noteObj","date","Date","toISOString","Math","random","concat","value","onChange","target","type","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8fdc0d39.chunk.js","sourcesContent":["import \"./note.css\";\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important ? \"make not important\" : \"make important\";\n\n  return (\n    <li className=\"note\">\n      {note.content}\n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  );\n};\nexport default Note;\n","import React from \"react\";\nimport \"../note.css\";\n\nexport default function Notification({ message }) {\n  if (message === null) {\n    return null;\n  }\n  return <div className=\"error\">{message}</div>;\n}\n","import axios from \"axios\";\nconst baseUrl = \"http://localhost:3001/app/notes\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((res) => res.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((res) => res.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then((res) => res.data);\n};\n\nexport default { getAll, create, update };\n","import React, { useState, useEffect } from \"react\";\nimport Note from \"./components/Note\";\nimport Notification from \"./components/Notification/Notification\";\nimport noteServices from \"./serv/note\";\n\nconst Footer = () => {\n  const footeStyle = {\n    color: \"green\",\n    fontStyle: \"italic\",\n    fontSize: 16,\n  };\n  return (\n    <div style={footeStyle}>\n      {\" \"}\n      <br />\n      <em>\n        Note app, Department of Computer Science, University of Helsinki 2021\n      </em>\n    </div>\n  );\n};\n\nconst App = (props) => {\n  const [notes, setNotes] = useState(props.notes);\n  const [newNote, setNewNote] = useState(\"Add new note\");\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(\"someERROR HAPPEND\");\n\n  const noteToShow = showAll\n    ? notes\n    : notes.filter((note) => note.important === true);\n\n  useEffect(() => {\n    noteServices.getAll().then((response) => {\n      setNotes(response);\n    });\n  }, []);\n\n  const addNote = (e) => {\n    e.preventDefault();\n    const noteObj = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n    };\n    noteServices.create(noteObj).then((response) => {\n      setNotes(notes.concat(response));\n      setNewNote(\" \");\n    });\n  };\n\n  const toggelingImportant = (id) => {\n    const note = notes.find((n) => n.id === id);\n    const changedNote = { ...note, important: !note.important };\n    noteServices\n      .update(id, changedNote)\n      .then((res) => {\n        setNotes(notes.map((note) => (note.id !== id ? note : res)));\n      })\n      .catch((error) => {\n        setErrorMessage(`the ${note.content} has already deleted`);\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 5000);\n        setNotes(notes.filter((n) => n.id !== id));\n      });\n  };\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? \"important\" : \"all\"}\n        </button>\n      </div>\n      <ul>\n        {notes.map((note) => (\n          <Note\n            key={note.id}\n            note={note}\n            toggelingImportant={() => toggelingImportant(note.id)}\n          />\n        ))}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={(e) => setNewNote(e.target.value)} />\n        <button type=\"submit\">ADD</button>\n      </form>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nconst notes = [\n  {\n    id: 1,\n    content: 'HTML is easy',\n    date: '2019-05-30T17:30:31.098Z',\n    important: true\n  },\n  {\n    id: 2,\n    content: 'Browser can execute only JavaScript',\n    date: '2019-05-30T18:39:34.091Z',\n    important: false\n  },\n  {\n    id: 3,\n    content: 'GET and POST are the most important methods of HTTP protocol',\n    date: '2019-05-30T19:20:14.298Z',\n    important: true\n  }\n]\n\nReactDOM.render(\n  <React.StrictMode>\n    <App notes={notes} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}