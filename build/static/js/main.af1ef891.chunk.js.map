{'version':3,'sources':['components/Note.js','components/Notification/Notification.js','serv/note.js','App.js','index.js'],'names':['Note','note','toggleImportance','label','important','className','content','onClick','Notification','message','baseUrl','axios','get','then','res','data','newObject','post','id','put','Footer','style','color','fontStyle','fontSize','App','props','useState','notes','setNotes','newNote','setNewNote','showAll','setShowAll','errorMessage','setErrorMessage','plans','title','plan','undefined','filter','useEffect','noteServices','response','map','toggelingImportant','find','n','changedNote','catch','error','setTimeout','i','onSubmit','e','preventDefault','noteObj','date','Date','toISOString','Math','random','concat','value','onChange','target','type','ReactDOM','render','StrictMode','document','getElementById'],'mappings':'oNAYeA,EAVF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UAAY,qBAAuB,iBAEtD,OACE,qBAAIC,UAAU,OAAd,UACGJ,EAAKK,QACN,wBAAQC,QAASL,EAAjB,SAAoCC,QCL3B,SAASK,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAgB,OAAZA,EACK,KAEF,qBAAKJ,UAAU,QAAf,SAAwBI,I,oBCN3BC,EAAU,aAiBD,EAfA,WAEb,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAACC,GAAD,OAASA,EAAIC,SAapB,EAVA,SAACC,GAEd,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAACC,GAAD,OAASA,EAAIC,SAQpB,EALA,SAACG,EAAIF,GAElB,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAACC,GAAD,OAASA,EAAIC,SCV7BK,EAAS,WAMb,OACE,sBAAKC,MANY,CACjBC,MAAO,QACPC,UAAW,SACXC,SAAU,IAGV,UACG,IACD,uBACA,2GA8GSC,EAvGH,SAACC,GACX,MAA0BC,mBAASD,EAAME,OAAzC,mBAAOA,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,gBAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAwCN,mBAAS,qBAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KAEMC,EAAQ,CACZ,CACEC,MAAO,UACPC,KAAM,UAER,CAAED,WAAOE,EAAWD,KAAM,WAC1B,CACED,MAAO,UACPC,KAAM,WAER,CACED,MAAO,UACPC,KAAM,YAISN,GAEfJ,EAAMY,QAAO,SAACvC,GAAD,OAA6B,IAAnBA,EAAKG,aAEhCqC,qBAAU,WACRC,IAAsB7B,MAAK,SAAC8B,GAC1Bd,EAASc,QAEV,IAgCH,OACE,gCACE,uCACA,cAACnC,EAAD,CAAcC,QAASyB,IACvB,8BACE,yBAAQ3B,QAAS,kBAAM0B,GAAYD,IAAnC,kBACQA,EAAU,YAAc,WAGlC,6BACGJ,EAAMgB,KAAI,SAAC3C,GAAD,OACT,cAAC,EAAD,CAEEA,KAAMA,EACN4C,mBAAoB,kBA/BH,SAAC3B,GAC1B,IAAMjB,EAAO2B,EAAMkB,MAAK,SAACC,GAAD,OAAOA,EAAE7B,KAAOA,KAClC8B,EAAW,2BAAQ/C,GAAR,IAAcG,WAAYH,EAAKG,YAChDsC,EACUxB,EAAI8B,GACXnC,MAAK,SAACC,GACLe,EAASD,EAAMgB,KAAI,SAAC3C,GAAD,OAAWA,EAAKiB,KAAOA,EAAKjB,EAAOa,SAEvDmC,OAAM,SAACC,GACNf,EAAgB,OAAD,OAAQlC,EAAKK,QAAb,yBACf6C,YAAW,WACThB,EAAgB,QACf,KACHN,EAASD,EAAMY,QAAO,SAACO,GAAD,OAAOA,EAAE7B,KAAOA,SAkBR2B,CAAmB5C,EAAKiB,MAF7CjB,EAAKiB,SAMhB,6BACGkB,EAAMQ,KAAI,SAACN,EAAMc,GAAP,OACTd,EAAKD,MACH,oBAAIhC,UAAU,QAAd,SACE,sBAAMA,UAAU,QAAhB,SAAyBiC,EAAKD,SADLe,QAWjC,uBAAMC,SA9DM,SAACC,GACfA,EAAEC,iBACF,IAAMC,EAAU,CACdlD,QAASwB,EACT2B,MAAM,IAAIC,MAAOC,cACjBvD,UAAWwD,KAAKC,SAAW,IAE7BnB,EAAoBc,GAAS3C,MAAK,SAAC8B,GACjCd,EAASD,EAAMkC,OAAOnB,IACtBZ,EAAW,SAqDX,UACE,uBAAOgC,MAAOjC,EAASkC,SAAU,SAACV,GAAD,OAAOvB,EAAWuB,EAAEW,OAAOF,UAC5D,wBAAQG,KAAK,SAAb,oBAEF,cAAC,EAAD,QC9FNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,CAAKzC,MAvBK,CACZ,CACEV,GAAI,EACJZ,QAAS,eACTmD,KAAM,2BACNrD,WAAW,GAEb,CACEc,GAAI,EACJZ,QAAS,sCACTmD,KAAM,2BACNrD,WAAW,GAEb,CACEc,GAAI,EACJZ,QAAS,+DACTmD,KAAM,2BACNrD,WAAW,QAQbkE,SAASC,eAAe,U','file':'static/js/main.af1ef891.chunk.js','sourcesContent':['import \'./note.css\';\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important ? \'make not important\' : \'make important\';\n\n  return (\n    <li className=\'note\'>\n      {note.content}\n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  );\n};\nexport default Note;\n','import React from \'react\';\nimport \'../note.css\';\n\nexport default function Notification({ message }) {\n  if (message === null) {\n    return null;\n  }\n  return <div className=\'error\'>{message}</div>;\n}\n','import axios from \'axios\';\nconst baseUrl = \'/app/notes\';\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((res) => res.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((res) => res.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then((res) => res.data);\n};\n\nexport default { getAll, create, update };\n','import React, { useState, useEffect } from \'react\';\nimport Note from \'./components/Note\';\nimport Notification from \'./components/Notification/Notification\';\nimport noteServices from \'./serv/note\';\n\nconst Footer = () => {\n  const footeStyle = {\n    color: \'green\',\n    fontStyle: \'italic\',\n    fontSize: 16,\n  };\n  return (\n    <div style={footeStyle}>\n      {\' \'}\n      <br />\n      <em>\n        Note app, Department of Computer Science, University of Helsinki 2021\n      </em>\n    </div>\n  );\n};\n\nconst App = (props) => {\n  const [notes, setNotes] = useState(props.notes);\n  const [newNote, setNewNote] = useState(\'Add new note\');\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(\'someERROR HAPPEND\');\n\n  const plans = [\n    {\n      title: \'Starter\',\n      plan: \'TIER_0\',\n    },\n    { title: undefined, plan: \'TIER_1A\' },\n    {\n      title: \'Classic\',\n      plan: \'TIER_2A\',\n    },\n    {\n      title: \'Premium\',\n      plan: \'TIER_3A\',\n    },\n  ];\n\n  const noteToShow = showAll\n    ? notes\n    : notes.filter((note) => note.important === true);\n\n  useEffect(() => {\n    noteServices.getAll().then((response) => {\n      setNotes(response);\n    });\n  }, []);\n\n  const addNote = (e) => {\n    e.preventDefault();\n    const noteObj = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n    };\n    noteServices.create(noteObj).then((response) => {\n      setNotes(notes.concat(response));\n      setNewNote(\' \');\n    });\n  };\n\n  const toggelingImportant = (id) => {\n    const note = notes.find((n) => n.id === id);\n    const changedNote = { ...note, important: !note.important };\n    noteServices\n      .update(id, changedNote)\n      .then((res) => {\n        setNotes(notes.map((note) => (note.id !== id ? note : res)));\n      })\n      .catch((error) => {\n        setErrorMessage(`the ${note.content} has already deleted`);\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 5000);\n        setNotes(notes.filter((n) => n.id !== id));\n      });\n  };\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? \'important\' : \'all\'}\n        </button>\n      </div>\n      <ul>\n        {notes.map((note) => (\n          <Note\n            key={note.id}\n            note={note}\n            toggelingImportant={() => toggelingImportant(note.id)}\n          />\n        ))}\n      </ul>\n      <ul>\n        {plans.map((plan, i) =>\n          plan.title === undefined ? (\n            <li className=\'hichi\' key={i}>\n              <span className=\'hichi\'>{plan.title}</span>\n            </li>\n          ) : (\n            <li className=\'hichi\' key={i}>\n              <span className=\'hichi\'>{plan.title}</span>\n            </li>\n          )\n        )}\n      </ul>\n\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={(e) => setNewNote(e.target.value)} />\n        <button type=\'submit\'>ADD</button>\n      </form>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n','import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nconst notes = [\n  {\n    id: 1,\n    content: 'HTML is easy',\n    date: '2019-05-30T17:30:31.098Z',\n    important: true\n  },\n  {\n    id: 2,\n    content: 'Browser can execute only JavaScript',\n    date: '2019-05-30T18:39:34.091Z',\n    important: false\n  },\n  {\n    id: 3,\n    content: 'GET and POST are the most important methods of HTTP protocol',\n    date: '2019-05-30T19:20:14.298Z',\n    important: true\n  }\n]\n\nReactDOM.render(\n  <React.StrictMode>\n    <App notes={notes} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n'],'sourceRoot':''}